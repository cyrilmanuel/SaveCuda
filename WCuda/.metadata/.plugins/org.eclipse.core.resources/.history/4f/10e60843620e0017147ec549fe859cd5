#pragma once

#include <math.h>
#include "MathTools.h"

#include "Calibreur_CPU.h"
#include "ColorTools_CPU.h"
using namespace cpu;

/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

class MandelbrotMath
    {

	/*--------------------------------------*\
	|*		Constructor		*|
	 \*-------------------------------------*/

    public:

	MandelbrotMath(uint n) :
		calibreur(Interval<float>(0, 120), Interval<float>(0, 1))
	    {
	    this->n = n;
	    }

	// constructeur copie automatique car pas pointeur dans
	//	DamierMath
	// 	calibreur
	// 	IntervalF

	virtual ~MandelbrotMath()
	    {
	    // rien
	    }

	/*--------------------------------------*\
	|*		Methodes		*|
	 \*-------------------------------------*/

    public:

	void colorXY(uchar4* ptrColor, float x, float y, float t)
	    {
	    float z = f(x, y, t);
	    calibreur.calibrer(z);
	    float hue01 = z;
	    if ( z == 0){
		ptrColor ->x = 0;
		ptrColor ->y = 0;
		ptrColor ->z = 0;
	    }else{
	    ColorTools::HSB_TO_RVB(hue01, ptrColor); // update color
	    }

	    ptrColor->w = 255; // opaque
	    }

    private:

	float f(float x, float y, float t)
	    {
	    float a0 = 0;
	    float b0 = 0;
	    float aCopy = 0;
	    //black
	    for (int k = 0; k <= t; k++)
		{
		if (((a0 * a0) + (b0 * b0)) > 4)
		    {
		    return k; // condition sortie HSB TROUVER
		    }
		aCopy = a0;
		// = la hue donc le retunr ici Ã©gale a noir si explosion
		// couleur si non
		a0 = ((a0 * a0) - (b0 * b0)) + x;
		b0 = 2 * aCopy * b0 + y;
		}
	    return -1;
	    }

	/*--------------------------------------*\
	|*		Attributs		*|
	 \*-------------------------------------*/

    private:

	// Input
	uint n;

	// Tools
	Calibreur<float> calibreur;

    };

/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/
