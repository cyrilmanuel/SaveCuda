#ifndef SPHERE_H
#define SPHERE_H
#include "cudaTools.h"
#include "MathTools.h"
#include "cudaType_CPU.h"

class Sphere
{
public:
__host__
Sphere(float3 centre, float rayon, float hue)
{
// Inputs
this->centre = centre;
this->r = rayon;
this->hue = hue;
// Tools
this->rCarre = rayon * rayon;
}
/**
* required by example for
new Sphere[n]
*/
__host__
Sphere()
{
// rien
}
__device__
float hCarre(float2 xySol)
{
float a = (centre.x - xySol.x);
float b = (centre.y - xySol.y);
return a * a + b * b;
}
__device__
bool isEnDessous(float hCarre)
{
return hCarre < rCarre;
}
__device__
float dz(float hCarre)
{
return sqrtf(rCarre - hCarre);
}
__device__
float brightness(float dz)
{
return dz / r;
}
__device__
float distance(float dz)
{
return centre.z - dz;
}
